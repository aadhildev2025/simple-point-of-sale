/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.awt.Font;
import javax.swing.JTextArea;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.print.PrinterException;

/**
 *
 * @author Aadhil
 */
public class Sale extends javax.swing.JFrame {

    /**
     * Creates new form Sale
     */
    public Sale() {
        initComponents();
        setLocationRelativeTo(null);//center the JFrameform
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnclear = new javax.swing.JButton();
        lbltot1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblstock = new javax.swing.JTable();
        lbltot = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtbuy = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btncart = new javax.swing.JButton();
        qty = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblqty = new javax.swing.JTable();
        btntot = new javax.swing.JButton();
        btnremove = new javax.swing.JButton();
        btnpay = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        txtbalance = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblbal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtre = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnclear.setBackground(new java.awt.Color(255, 0, 0));
        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnclear.setForeground(new java.awt.Color(255, 255, 255));
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        lbltot1.setText("Rs.");

        tblstock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Qty", "Amount (Rs)"
            }
        ));
        jScrollPane3.setViewportView(tblstock);

        lbltot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbltot.setText("0.00");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnsearch.setBackground(new java.awt.Color(0, 0, 0));
        btnsearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsearch.setForeground(new java.awt.Color(255, 255, 255));
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Product Name or Barcode :");

        btncart.setBackground(new java.awt.Color(0, 0, 0));
        btncart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncart.setForeground(new java.awt.Color(102, 255, 102));
        btncart.setText("Add to cart");
        btncart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncartActionPerformed(evt);
            }
        });

        qty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        tblqty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product", "Ava.Qty", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblqty);

        btntot.setBackground(new java.awt.Color(51, 255, 51));
        btntot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btntot.setForeground(new java.awt.Color(255, 255, 255));
        btntot.setText("Total");
        btntot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntotActionPerformed(evt);
            }
        });

        btnremove.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnremove.setForeground(new java.awt.Color(255, 0, 0));
        btnremove.setText("Remove");
        btnremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnremoveActionPerformed(evt);
            }
        });

        btnpay.setBackground(new java.awt.Color(0, 0, 0));
        btnpay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnpay.setForeground(new java.awt.Color(51, 255, 51));
        btnpay.setText("Pay Out");
        btnpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpayActionPerformed(evt);
            }
        });

        btnprint.setBackground(new java.awt.Color(0, 0, 0));
        btnprint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnprint.setForeground(new java.awt.Color(255, 255, 255));
        btnprint.setText("Print Receipt");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });

        txtbalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbalanceActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Balance :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Given Cash");

        lblbal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblbal.setText("0.00");

        txtre.setColumns(20);
        txtre.setRows(5);
        jScrollPane2.setViewportView(txtre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btntot, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(142, 142, 142)
                                .addComponent(lbltot1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbltot))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(txtbuy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnremove)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(qty)
                                        .addComponent(btncart)))
                                .addGap(47, 47, 47)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtbalance)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnpay, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnprint))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(26, 26, 26)
                                    .addComponent(lblbal))
                                .addComponent(btnclear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtbuy, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addComponent(btnsearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btncart)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnremove))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntot)
                            .addComponent(lbltot1)
                            .addComponent(lbltot))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtbalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnpay, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnprint, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblbal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnclear))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
    lbltot.setText("0.00");
    txtbuy.setText("");
    lblbal.setText("0.00");
    txtre.setText("");
    txtbalance.setText("");
    
    DefaultTableModel model = (DefaultTableModel) tblstock.getModel();
    model.setRowCount(0);

    DefaultTableModel mode = (DefaultTableModel) tblqty.getModel();
    mode.setRowCount(0);

    }//GEN-LAST:event_btnclearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.hide();
        MainmenuEmployee empmm = new MainmenuEmployee();
        empmm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        String searchTerm = txtbuy.getText().trim();
        if (searchTerm.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a product name or barcode!", " ", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try (Connection conn = MyConn.getConnection();
            PreparedStatement pst = conn.prepareStatement("SELECT name, category, price, stock, barcode FROM products WHERE name LIKE ? OR barcode LIKE ?")) {

            String searchPattern = "%" + searchTerm + "%";
            pst.setString(1, searchPattern);
            pst.setString(2, searchPattern);

            try (ResultSet rs = pst.executeQuery()) {
                DefaultTableModel model = (DefaultTableModel) tblqty.getModel();
                model.setRowCount(0);

                if (!rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(this, "No products found!", "", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    while (rs.next()) {
                        model.addRow(new Object[]{
                            rs.getString("name"),
                            rs.getInt("stock"),
                            rs.getDouble("price"),

                        });
                    }
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btncartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncartActionPerformed
        // TODO add your handling code here:

int selectedRow = tblqty.getSelectedRow(); // Get the selected row index

if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "Please select a product to add to the cart.", "", JOptionPane.WARNING_MESSAGE);
    return;
}

// Check for null or empty rows before accessing values
Object productObj = tblqty.getValueAt(selectedRow, 0);
Object availableQtyObj = tblqty.getValueAt(selectedRow, 1);
Object priceObj = tblqty.getValueAt(selectedRow, 2);

if (productObj == null || availableQtyObj == null || priceObj == null ||
    productObj.toString().trim().isEmpty() || availableQtyObj.toString().trim().isEmpty() || priceObj.toString().trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Error: Product data is missing or invalid. Please refresh and try again.", "", JOptionPane.ERROR_MESSAGE);
    return;
}

String productName = productObj.toString().trim();
int availableQty;
double price;

try {
    availableQty = Integer.parseInt(availableQtyObj.toString().trim());
    price = Double.parseDouble(priceObj.toString().trim());
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Error: Invalid data format.", "", JOptionPane.ERROR_MESSAGE);
    return;
}

int quantity = (int) qty.getValue(); // Get the quantity

if (quantity <= 0) {
    JOptionPane.showMessageDialog(this, "Please enter a valid quantity.", "", JOptionPane.WARNING_MESSAGE);
    return;
}

if (quantity > availableQty) {
    JOptionPane.showMessageDialog(this, "Insufficient stock!", "", JOptionPane.ERROR_MESSAGE);
    return;
}

double totalPrice = price * quantity; // Calculate total price

DefaultTableModel cartModel = (DefaultTableModel) tblstock.getModel();
boolean productExists = false;

// Loop through the cart to check for an existing product
for (int i = 0; i < cartModel.getRowCount(); i++) {
    Object existingProductObj = cartModel.getValueAt(i, 0);
    Object existingQtyObj = cartModel.getValueAt(i, 1);
    Object existingTotalObj = cartModel.getValueAt(i, 2);

    if (existingProductObj != null && existingQtyObj != null && existingTotalObj != null && existingProductObj.toString().equals(productName)) {
        // If product exists, update the quantity and total price instead of adding a new row
        int existingQty = Integer.parseInt(existingQtyObj.toString());
        double existingTotal = Double.parseDouble(existingTotalObj.toString());

        int newQty = existingQty + quantity; // Update quantity
        double newTotal = existingTotal + totalPrice; // Update total price

        cartModel.setValueAt(newQty, i, 1); // Update quantity
        cartModel.setValueAt(newTotal, i, 2); // Update total price
        productExists = true;
        break;
    }
}

if (!productExists) {
    cartModel.addRow(new Object[]{productName, quantity, totalPrice});
}
    }//GEN-LAST:event_btncartActionPerformed

    private void btntotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntotActionPerformed
        // TODO add your handling code here:
DefaultTableModel cartModel = (DefaultTableModel) tblstock.getModel();
double totalAmount = 0.0;

// Remove empty rows from tblstock
for (int i = cartModel.getRowCount() - 1; i >= 0; i--) {
    Object product = cartModel.getValueAt(i, 0); // Product Name
    Object price = cartModel.getValueAt(i, 2);   // Total Price (Column Index 2)

    // Remove rows where both columns are empty or null
    if ((product == null || product.toString().trim().isEmpty()) &&
        (price == null || price.toString().trim().isEmpty())) {
        cartModel.removeRow(i);
    }
}

// Calculate total amount (Only from the "Total Price" column)
for (int i = 0; i < cartModel.getRowCount(); i++) {
    Object price = cartModel.getValueAt(i, 2); // Get the total price from column index 2

    if (price != null && !price.toString().trim().isEmpty()) {
        try {
            totalAmount += Double.parseDouble(price.toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price format in row " + (i + 1), "", JOptionPane.ERROR_MESSAGE);
        }
    }
}

// Display the total amount in lbltot (formatted to 2 decimal places)
lbltot.setText(String.format("%.2f", totalAmount));
    }//GEN-LAST:event_btntotActionPerformed

    private void btnremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnremoveActionPerformed
        // TODO add your handling code here:
        // Get the selected row index
        int selectedRow = tblstock.getSelectedRow();

        // Check if a row is selected
        if (selectedRow != -1) {
            // Get the table model
            DefaultTableModel model = (DefaultTableModel) tblstock.getModel();

            // Remove the selected row
            model.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(this, "Please select an item to remove.");
        }
    }//GEN-LAST:event_btnremoveActionPerformed

    private void btnpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpayActionPerformed
        // TODO add your handling code here:
try {
    System.out.println("btnpayActionPerformed triggered"); // Debug statement

    // Validate lbltot
    if (lbltot.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Total amount is missing!", "", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate txtbalance
    if (txtbalance.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Give me the cash!", "", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Get the total amount from lbltot
    double totalAmount = Double.parseDouble(lbltot.getText().trim());

    // Get the given cash from txtbalance
    double givenCash = Double.parseDouble(txtbalance.getText().trim());

    // Check if the given cash is sufficient
    if (givenCash < totalAmount) {
        JOptionPane.showMessageDialog(this, "Insufficient cash provided!", "", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Calculate the balance cash
    double balanceCash = givenCash - totalAmount;
    System.out.println("Balance Cash: " + balanceCash); // Debug statement

    // Display the balance cash in lblbal
    lblbal.setText(String.format("%.2f", balanceCash));

    // Show a popup message
    JOptionPane.showMessageDialog(this, "Thanks For Shopping!", "", JOptionPane.INFORMATION_MESSAGE);

} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Invalid input for cash or total amount!", "", JOptionPane.ERROR_MESSAGE);
}         
    }//GEN-LAST:event_btnpayActionPerformed

    private void txtbalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbalanceActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:
try {
    StringBuilder receipt = new StringBuilder();
    receipt.append("          MADZOO DIGITAL\n");
    receipt.append("------------------------------------------\n");
    receipt.append(String.format("%-15s %-8s %-10s\n", "Product", "Qty", "Amount(Rs)"));
    receipt.append("------------------------------------------\n");

    DefaultTableModel model = (DefaultTableModel) tblstock.getModel();

    // Loop through the table and add details to the receipt
    for (int i = 0; i < model.getRowCount(); i++) {
        Object productObj = model.getValueAt(i, 0); // Product Name
        Object qtyObj = model.getValueAt(i, 1);     // Quantity
        Object amountObj = model.getValueAt(i, 2);  // Amount (Rs)

        // Check if values are null
        String productName = (productObj != null) ? productObj.toString() : "N/A";
        String qty = (qtyObj != null) ? qtyObj.toString() : "0";
        String amount = (amountObj != null) ? amountObj.toString() : "0.00";

        receipt.append(String.format("%-15s %-8s %-10s\n", productName, qty, amount));
    }

    receipt.append("------------------------------------------\n");
    receipt.append(String.format("%-25s %s\n", "Total:", lbltot.getText()));
    receipt.append(String.format("%-25s %s\n", "Given Cash:", txtbalance.getText()));
    receipt.append(String.format("%-25s %s\n", "Balance:", lblbal.getText()));
    receipt.append("------------------------------------------\n");
    receipt.append("      Thank You! Visit Again!  \n");

    // Display receipt in JTextArea
    txtre.setText(receipt.toString());

    // Ensure print runs on the event dispatch thread
    SwingUtilities.invokeLater(() -> {
        try {
            JTextArea textArea = new JTextArea(receipt.toString());
            textArea.setFont(new Font("Monospaced", Font.PLAIN, 12));
            textArea.print();
        } catch (PrinterException e) {
            JOptionPane.showMessageDialog(null, "Printing Error: " + e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    });

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Unexpected Error: " + e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}
        
    }//GEN-LAST:event_btnprintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncart;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnpay;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnremove;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btntot;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblbal;
    private javax.swing.JLabel lbltot;
    private javax.swing.JLabel lbltot1;
    private javax.swing.JSpinner qty;
    private javax.swing.JTable tblqty;
    private javax.swing.JTable tblstock;
    private javax.swing.JTextField txtbalance;
    private javax.swing.JTextField txtbuy;
    private javax.swing.JTextArea txtre;
    // End of variables declaration//GEN-END:variables
}
